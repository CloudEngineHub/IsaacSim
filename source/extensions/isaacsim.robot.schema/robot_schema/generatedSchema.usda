#usda 1.0
(
    "WARNING: THIS FILE IS GENERATED BY usdGenSchema.  DO NOT EDIT."
)

class "IsaacRobotAPI"
{
    string[] isaac:changelog = [] (
        doc = """\r
        Changelog of the robot.\r
        """
    )
    string isaac:description = ""
    token isaac:license = "Other" (
        allowedTokens = ["MIT", "Apache-2.0", "GPL-3.0", "LGPL-3.0", "BSD-3-Clause", "BSD-2-Clause", "ISC", "MPL-2.0", "EPL-2.0", "CC0-1.0", "Unlicense", "Other"]
        doc = """\r
        License for using the robot.\r
        """
    )
    string isaac:namespace = ""
    rel isaac:physics:robotJoints (
        doc = """\r
        Sorted list of joints to be reported in the robot structure. This list can contain either direct references to Robot Joints, or to a Robot composition - which inserts all sub-components into the list.\r
        """
    )
    rel isaac:physics:robotLinks (
        doc = """\r
        Sorted list of bodies, Reference points or Robot assemblies ( all bodies from the robot are inserted) to be listed in the robot kinematics tree. \r
        The order defines how the robot will be reported both in communication protocols as in the body poses \r
        tensor.\r
        """
    )
    token isaac:robotType = "Default" (
        allowedTokens = ["Default", "End Effector", "Manipulator", "Humanoid", "Wheeled", "Holonomic", "Quadruped", "Mobile Manipulators", "Aerial"]
        doc = """\r
        Type of robot.\r
        """
    )
    string isaac:source = "" (
        doc = """\r
        Source of the robot.\r
        """
    )
    string isaac:version = "" (
        doc = """\r
        Version of the robot.\r
        """
    )
}

class "IsaacLinkAPI"
{
    string isaac:nameOverride = ""
}

class "IsaacReferencePointAPI"
{
    string isaac:Description = ""
    uniform token isaac:forwardAxis = "X" (
        allowedTokens = ["X", "Y", "Z"]
    )
}

class "IsaacJointAPI"
{
    bool[] isaac:actuator = [0, 0, 0, 0, 0, 0]
    string isaac:NameOverride = ""
    float[] isaac:physics:AccelerationLimit = [-1, -1, -1, -1, -1, -1]
    float[] isaac:physics:JerkLimit = [-1, -1, -1, -1, -1, -1, -1]
    int isaac:physics:Rot_X:DoFOffset = 0
    int isaac:physics:Rot_Y:DoFOffset = 1
    int isaac:physics:Rot_Z:DoFOffset = 2
    int isaac:physics:Tr_X:DoFOffset = 3
    int isaac:physics:Tr_Y:DoFOffset = 4
    int isaac:physics:Tr_Z:DoFOffset = 5
}

class "IsaacSurfaceGripper"
{
    rel isaac:attachmentPoints (
        doc = """\r
        List of D6 Joints to be used as components of the Surface Gripper.\r
        These joints represent the contact points where the gripper can attach to objects.\r
        """
    )
    float isaac:coaxialForceLimit = -1 (
        displayName = "Coaxial Force Limit"
        doc = """\r
        Maximum allowable coaxial force per attachment point, measured in Newtons.\r
        A value of -1 indicates no limit.\r
        """
    )
    rel isaac:grippedObjects (
        displayName = "Gripped Objects"
        doc = """\r
        List of objects currently being gripped. This relationship is updated at runtime\r
        to reflect the current state of the gripper's interactions.\r
        """
    )
    float isaac:maxGripDistance = 0.01 (
        displayName = "Max Grip Distance"
        doc = """\r
        Maximum distance the gripper can check to grab an object, measured in meters.\r
        """
    )
    float isaac:retryInterval = 0 (
        displayName = "Retry Interval"
        doc = """\r
        Time interval while the gripper is trying to close before it times out, measured in seconds.\r
        """
    )
    float isaac:shearForceLimit = -1 (
        displayName = "Shear Force Limit"
        doc = """\r
        Maximum allowable shear force per attachment point, measured in Newtons.\r
        A value of -1 indicates no limit.\r
        """
    )
    uniform token isaac:status = "Open" (
        allowedTokens = ["Open", "Closed", "Closing"]
        displayName = "Status"
        doc = """\r
        Current status of the surface gripper.\r
        """
    )
}

class "IsaacAttachmentPointAPI"
{
    float isaac:clearanceOffset = 0 (
        displayName = "Clearance Offset"
        doc = """\r
        Offset to be added to the grip distance to avoid self-collision, measured in meters.\r
        """
    )
    uniform token isaac:forwardAxis = "X" (
        allowedTokens = ["X", "Y", "Z"]
        displayName = "Forward Axis"
        doc = """\r
        Axis along which the gripper opens and closes.\r
        """
    )
}

