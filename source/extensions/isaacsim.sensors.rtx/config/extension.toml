[package]
version = "15.8.2"
category = "Simulation"
title = "Isaac Sim Isaac Sensor Simulation"
description = "Provides APIs for RTX-based sensors, including RTX Lidar & RTX Radar."
keywords = ["isaac", "physics", "robotics"]
changelog = "docs/CHANGELOG.md"
readme = "docs/README.md"
preview_image = "data/preview.png"
icon = "data/icon.png"
writeTarget.kit = true

[dependencies]
"isaacsim.core.api" = {}
"isaacsim.core.deprecation_manager" = {}
"isaacsim.core.nodes" = {}
"isaacsim.core.simulation_manager" = {}
"isaacsim.gui.components" = {}
"isaacsim.robot.schema" = {}
"isaacsim.storage.native" = {}
"isaacsim.util.debug_draw" = {}
"omni.graph" = {}
"omni.graph.action" = {}
"omni.kit.numpy.common" = {}
"omni.kit.pip_archive" = {} # pulls in numpy
"omni.replicator.core" = {}
# Make sure the versions are aligned with source/apps/isaacsim.exp.extscache.kit
"omni.sensors.nv.common" = {}
"omni.sensors.nv.ids" = {}
"omni.sensors.nv.lidar" = {}
"omni.sensors.nv.radar" = {}
"omni.syntheticdata" = {}
"omni.timeline" = {} # Needed for simulation to occur
"omni.usd" = {} # needed for call to add aov
"omni.usd.schema.omni_sensors" = {}
"usdrt.scenegraph" = {}

[[python.module]]
name = "isaacsim.sensors.rtx"

[[python.module]]
name = "isaacsim.sensors.rtx.generic_model_output"

[[python.module]]
name = "isaacsim.sensors.rtx.tests"
public = false

[[native.plugin]]
path = "bin/*.plugin"
recursive = false

[settings]
# List of directories which renderer will search to find Lidar profile for (deprecated) camera-based Lidar
app.sensors.nv.lidar.profileBaseFolder=[
    "${omni.sensors.nv.common}/data/lidar/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/HESAI/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/NVIDIA/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/Ouster/OS0/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/Ouster/OS1/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/Ouster/OS2/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/SICK/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/SLAMTEC/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/Velodyne/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/ZVISION/",
    "${isaacsim.sensors.rtx}/data/lidar_configs/"
]

# Renderer keeps Lidar return buffer on GPU for post-processing.
app.sensors.nv.lidar.outputBufferOnGPU = true
# Renderer keeps Radar return buffer on GPU for post-processing.
app.sensors.nv.radar.outputBufferOnGPU = true
# Enable non-visual materials using USD attributes
rtx.materialDb.nonVisualMaterialCSV.enabled=false
# Specify non-visual material USD attribute prefix
rtx.materialDb.nonVisualMaterialSemantics.prefix="omni:simready:nonvisual"

[[test]]
timeout = 1200
stdoutFailPatterns.exclude = [
    # This is excluded in at least 3 kit tests.
    "*Missing call to destroyResourceBindingSignature()*",
    "*Error processing node attribute `outputs:pointInstanceDataType`: dataType attribute is empty*",
    "*RuntimeWarning: invalid value encountered in divide*",
    "*RuntimeWarning: divide by zero encountered in divide*",
    "*[Error] [isaacsim.sensors.rtx.plugin] IsaacComputeRTXLidarFlatScan: Lidar prim is not a 2D Lidar, and node will not execute. Stop the simulation, correct the issue, and restart.*",
    "*[Error] [isaacsim.sensors.rtx.plugin] IsaacComputeRTXLidarFlatScan: Lidar prim elevationDeg contains nonzero value*",
    "*[Error] [isaacsim.sensors.rtx.plugin] IsaacComputeRTXLidarFlatScan: renderProductPath input is empty. Skipping execution.*",
    "*[Error] [isaacsim.sensors.rtx.impl.nonvisual_materials] Attribute 'invalidattribute' not found in attributes dictionary*",
    "*[Error] [isaacsim.sensors.rtx.impl.nonvisual_materials] Base material 'InvalidMaterial' not found in base materials dictionary*",
    "*[Error] [isaacsim.sensors.rtx.impl.nonvisual_materials] Coating 'invalidcoating' not found in coatings dictionary*",
    "*[Error] [isaacsim.sensors.rtx.impl.nonvisual_materials] Provided prim is not a valid USD prim*",
    "*[Error] [isaacsim.sensors.rtx.impl.nonvisual_materials] Provided prim is not a material prim*",
    "*[Error] [isaacsim.sensors.rtx.impl.nonvisual_materials] Provided prim is not a valid USD prim*",
    "*[Error] [isaacsim.sensors.rtx.impl.nonvisual_materials] Provided prim is not a material prim*",
]
stdoutFailPatterns.include = [
    "*Could not open asset * for reference*",
    "*CUDA error*"
]
args = [
    "--enable",
    "omni.kit.loop-isaac",
    "--reset-user",
    "--vulkan",
    "--/app/asyncRendering=0",
    "--/app/asyncRenderingLowLatency=0",
    "--/app/fastShutdown=1",
    "--/app/file/ignoreUnsavedOnExit=1",
    "--/app/hydraEngine/waitIdle=0",
    "--/app/player/useFixedTimeStepping=false",
    "--/app/renderer/skipWhileMinimized=0",
    "--/app/renderer/sleepMsOnFocus=0",
    "--/app/renderer/sleepMsOutOfFocus=0",
    "--/app/runLoops/main/manualModeEnabled=true",
    "--/app/runLoops/main/rateLimitEnabled=false",
    "--/app/settings/fabricDefaultStageFrameHistoryCount=3",
    "--/app/settings/persistent=0",
    "--/app/useFabricSceneDelegate=true",
    "--/app/viewport/createCameraModelRep=0",
    "--/crashreporter/skipOldDumpUpload=1",
    "--/exts/omni.usd/locking/onClose=0",
    "--/omni/kit/plugin/syncUsdLoads=1",
    "--/omni/replicator/asyncRendering=0",
    '--/persistent/app/stage/upAxis="Z"',
    "--/persistent/app/viewport/defaults/tickRate=120",
    "--/persistent/app/viewport/displayOptions=31951",
    "--/persistent/omni/replicator/captureOnPlay=1",
    "--/persistent/omnigraph/updateToUsd=0",
    "--/persistent/physics/visualizationDisplayJoints=0",
    "--/persistent/renderer/startupMessageDisplayed=1",
    "--/persistent/simulation/defaultMetersPerUnit=1.0",
    "--/persistent/simulation/minFrameRate=15",
    "--/renderer/multiGpu/autoEnable=0",
    "--/renderer/multiGpu/enabled=0",
    "--/rtx-transient/dlssg/enabled=0",
    "--/rtx-transient/resourcemanager/enableTextureStreaming=1",
    "--/rtx/descriptorSets=360000",
    "--/rtx/hydra/enableSemanticSchema=1",
    "--/rtx/hydra/materialSyncLoads=1",
    "--/rtx/materialDb/syncLoads=1",
    "--/rtx/newDenoiser/enabled=1",
    "--/rtx/reservedDescriptors=900000",
    ### Extension specific args
    "--/app/hydraEngine/waitIdle=1",
    "--/app/updateOrder/checkForHydraRenderComplete=1000",
    "--/rtx-transient/stableIds/enabled=true",
]

[[test]]
name = "startup"
args = [
    "--/app/settings/fabricDefaultStageFrameHistoryCount = 3",
]
